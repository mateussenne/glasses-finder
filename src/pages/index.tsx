import {
  Button,
  Center,
  Container,
  FileButton,
  Grid,
  Title,
} from "@mantine/core";
import { useForm } from "@mantine/form";
import Head from "next/head";
import { useEffect, useMemo, useRef, useState } from "react";

export default function Home() {
  const [file, setFile] = useState<File | null>(null);
  const form = useForm({
    initialValues: {
      file: null,
    },
  });

  const photoUploadForm = useRef<HTMLFormElement>(null);

  useMemo(() => {
    setFile(form.values.file);
    async function uploadFile() {
      if (file) {
        const formData = new FormData();
        formData.append("file", file);
        await fetch("/api/uploads/file-upload", {
          method: "POST",
          body: formData,
        });
      }
    }
    // eslint-disable-next-line @typescript-eslint/no-floating-promises
    uploadFile();
  }, [form.values.file, file]);

  const width = 800;
  const height = 600;
  const [webCamStatus, setWebCamStatus] = useState(false);
  const [cameraPhoto, setCameraPhoto] = useState(false);
  const videoRef = useRef<HTMLVideoElement | null>(null);
  const photoRef = useRef<HTMLCanvasElement | null>(null);

  const activateWebcam = () => {
    setWebCamStatus(true);
  };

  const getVideo = () => {
    if (webCamStatus) {
      navigator.mediaDevices
        .getUserMedia({
          video: { width: 800, height: 600 },
        })
        .then((stream) => {
          const video = videoRef.current;
          if (!video) {
            return console.log("no video signal");
          }
          video.srcObject = stream;
          video
            .play()
            .then((playing) => {
              console.log(playing);
            })
            .catch((e) => {
              console.log(e);
            });
        })
        .catch((e) => {
          console.log("error", e);
        });
    }
  };

  const takePhoto = () => {
    const video = videoRef.current;
    const photo = photoRef.current;

    if (video) {
      const ctx = photo?.getContext("2d");
      ctx?.drawImage(video, 0, 0, width, height);
      setCameraPhoto(true);
      photo?.toBlob((blob) => {
        if (blob) {
          const file = new File([blob], "photosnap.jpg");
          setFile(file);
        }
      });
    }
  };

  useEffect(() => {
    getVideo();
  }),
    [videoRef];

  return (
    <>
      <Head>
        <title>Send your photo</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col items-center justify-center bg-gradient-to-b from-[#1c2046] to-[#18140b]">
        <Container>
          <Grid grow>
            {webCamStatus ? (
              <Grid.Col span={12}>
                <canvas
                  className={!cameraPhoto ? "hidden" : ""}
                  width={width}
                  height={height}
                  ref={photoRef}
                ></canvas>
                <video
                  className={cameraPhoto ? "hidden" : ""}
                  ref={videoRef}
                ></video>
                <Button onClick={takePhoto}>Take photo!</Button>
              </Grid.Col>
            ) : (
              <>
                <Grid.Col span={12}>
                  <Center>
                    <Title className="font-sans text-7xl text-white">
                      Send your photo
                    </Title>
                  </Center>
                </Grid.Col>
                <Grid.Col span={6}>
                  <form
                    action={"/api/uploads/file-upload"}
                    ref={photoUploadForm}
                  >
                    <FileButton
                      accept="image/png,image/jpeg"
                      {...form.getInputProps("file")}
                    >
                      {(props) => (
                        <Button
                          className="float-right rounded-full bg-white/10 px-10 py-3 font-semibold text-white no-underline transition hover:bg-amber-950"
                          {...props}
                        >
                          Upload image
                        </Button>
                      )}
                    </FileButton>
                  </form>
                </Grid.Col>
                <Grid.Col span={6}>
                  <Button
                    className="float-left rounded-full bg-white/10 px-10 py-3 font-semibold text-white no-underline transition hover:bg-amber-950"
                    onClick={activateWebcam}
                  >
                    Use camera
                  </Button>
                </Grid.Col>
              </>
            )}
          </Grid>
          <Grid>
            <Grid.Col span={12}>
              <form onSubmit={form.onSubmit((values) => console.log(values))}>
                <Center>
                  <Button
                    className="rounded-full bg-white/10 px-10 py-3 font-semibold text-white no-underline transition hover:bg-amber-950"
                    type="submit"
                  >
                    Send!
                  </Button>
                </Center>
              </form>
            </Grid.Col>
          </Grid>
        </Container>
      </main>
    </>
  );
}
