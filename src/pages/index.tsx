import { Button, FileButton, Group } from "@mantine/core";
import { useForm } from "@mantine/form";
import { signIn, signOut, useSession } from "next-auth/react";
import Head from "next/head";
import { useMemo, useState } from "react";

export default function Home() {
  const [file, setFile] = useState<File | null>(null);
  const form = useForm({
    initialValues: {
      file: null,
    },
  });

  useMemo(() => {
    setFile(form.values.file);
    async function uploadFile() {
      if (file) {
        const formData = new FormData();
        formData.append("file", file);
        formData.append("fileName", file.name);
        await fetch("/api/uploads/file-upload", {
          method: "POST",
          body: formData,
        });
      }
    }

    // eslint-disable-next-line @typescript-eslint/no-floating-promises
    uploadFile();
  }, [form.values.file, file]);

  return (
    <>
      <Head>
        <title>Send your photo</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col items-center justify-center bg-gradient-to-b from-[#2e026d] to-[#15162c]">
        <div className="container flex flex-col items-center justify-center gap-12 px-4 py-16 ">
          <h1 className="text-5xl font-extrabold tracking-tight text-white sm:text-[5rem]">
            Send your photo
          </h1>
          <div className="grid grid-cols-1 gap-4 sm:grid-cols-2 md:gap-8">
            <>
              <form action={"/api/uploads/file-upload"}>
                <Group position="center">
                  <FileButton
                    accept="image/png,image/jpeg"
                    {...form.getInputProps("file")}
                  >
                    {(props) => <Button {...props}>Upload image</Button>}
                  </FileButton>
                </Group>
              </form>
            </>
            <form onSubmit={form.onSubmit((values) => console.log(values))}>
              <Button type="submit">Send!</Button>
            </form>
          </div>
          <AuthShowcase />
        </div>
      </main>
    </>
  );
}

function AuthShowcase() {
  const { data: sessionData } = useSession();

  return (
    <div className="flex flex-col items-center justify-center gap-4">
      <p className="text-center text-2xl text-white">
        {sessionData && <span>Logged in as {sessionData.user?.name}</span>}
      </p>
      <button
        className="rounded-full bg-white/10 px-10 py-3 font-semibold text-white no-underline transition hover:bg-white/20"
        onClick={sessionData ? () => void signOut() : () => void signIn()}
      >
        {sessionData ? "Sign out" : "Sign in"}
      </button>
    </div>
  );
}
